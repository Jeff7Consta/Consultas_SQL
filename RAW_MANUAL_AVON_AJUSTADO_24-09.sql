IF OBJECT_ID('tempdb..##CARGA_DIA') IS NOT NULL DROP TABLE ##CARGA_DIA
IF OBJECT_ID('tempdb..##TELEFONES') IS NOT NULL DROP TABLE ##TELEFONES
IF OBJECT_ID('tempdb..##RAWOUT') IS NOT NULL DROP TABLE ##RAWOUT
/*==========================================================================EXTRAI CARGA DIA=============================================================================================================*/
SELECT DISTINCT
'AVON CYBER' AS CEDENTE,
V3.ID_CLIENTE AS EC,
NOME AS NOME,
CPF,
CLI.NU_CPF_CNPJ,
DEPOSITO,
MAX(CONVERT(VARCHAR, CLI.DT_NASCIMENTO, 103)) AS 'DATA NASC'
INTO ##CARGA_DIA FROM LOCALCOB_DW..CARTEIRA_AVON_V3_DIA V3
INNER JOIN [10.155.4.158].[EASYCOLLECTOR].[DBO].TB_CLIENTE CLI ON V3.CPF = CLI.NU_CPF_CNPJ
WHERE V3.IMPORT_cob = 002
AND V3.DATA_BASE = CONVERT(DATE, GETDATE(),103)
--AND V3.ATRASO BETWEEN 8 AND 30
AND V3.VL_SALDO > 18
AND V3.ACORDO_ATIVO = 'NÃO'
AND V3.DEPOSITO = 'AVON - M1'

GROUP BY

V3.ID_CLIENTE,
NOME,
CPF,
CLI.NU_CPF_CNPJ,
DEPOSITO
/*==========================================================================EXTRAI E MODELA TELEFONES====================================================================================================*/
SELECT Distinct
CustomerID as EC,
DNIS As TELEFONE,
CASE
       WHEN LEN(DNIS) = 11 THEN 'CELULAR' ELSE 'FIXO' END AS TIPO_TEL,
MAX(Convert(Date, CallStart, 103)) as DATA_ACIONAMENTO
INTO ##TELEFONES
FROM [ADCOBMIS01].[DBO].[AVON_CPC_PURO]  
Where CustomerID Is Not Null
Group By
CustomerID,
DNIS,
CASE
       WHEN LEN(DNIS) = 11 THEN 'CELULAR' ELSE 'FIXO' END

/*==========================================================================CPC DA BASE==================================================================================================================*/
IF OBJECT_ID('tempdb..##TUDOTEL') IS NOT NULL DROP TABLE ##TUDOTEL
CREATE TABLE ##TUDOTEL (
       EC BIGINT, 
       TELEFONE BIGINT,
       PRI VARCHAR(10)
)
CREATE UNIQUE CLUSTERED INDEX [IX_tmp_TUDOTEL] ON ##TUDOTEL (EC,TELEFONE);
 
/*tudotel*/
 
-- select * from ##TELEFONES 
/*cpc*/
insert into ##TUDOTEL
SELECT distinct FORA.EC, FORA.TELEFONE, 'A' AS PRI  FROM (
SELECT DISTINCT
ROW_NUMBER()over(partition by    B.TELEFONE order by B.TELEFONE) As QUANTIDADE,
A.EC,
CAST(B.TELEFONE AS BIGINT) AS TELEFONE
FROM ##CARGA_DIA A
LEFT JOIN ##TELEFONES B ON A.EC = B.EC
WHERE B.TELEFONE IS NOT NULL
)FORA
left join  ##TUDOTEL FJTEM ON
FJTEM.EC=FORA.EC 
AND FJTEM.TELEFONE=FORA.TELEFONE
where
FJTEM.EC IS NULL
 
 
/*sem cpc*/ 
insert into ##TUDOTEL
 
select
X.EC, 
X.TELEFONE,
MIN(X.PRI)
from
(SELECT FORA.EC, FORA.TELEFONE, 'B'+[ADCOBMIS01].dbo.strzero(FORA.QUANTIDADE,3) AS PRI FROM (
SELECT 
A.EC,
CAST(CAST(C.NU_DDD AS VARCHAR)+CAST(C.NU_TELEFONE AS VARCHAR) AS BIGINT) AS TELEFONE,
ROW_NUMBER()over(partition by   A.EC order by C.TP_PREFERENCIAL DESC, C.TP_HABILITADO, C.TP_ORIGEM desc) As QUANTIDADE
FROM ##CARGA_DIA A
INNER JOIN [10.155.4.158].[EASYCOLLECTOR].[DBO].[TB_CLIENTE_TELEFONE] C ON A.EC = C.ID_CLIENTE
left join  ##TUDOTEL FJTEM ON
FJTEM.EC=A.EC 
AND FJTEM.TELEFONE=CAST(CAST(C.NU_DDD AS VARCHAR)+CAST(C.NU_TELEFONE AS VARCHAR) AS BIGINT)
where
FJTEM.EC IS NULL

--select * from [10.155.4.158].[EASYCOLLECTOR].[DBO].[TB_CLIENTE_TELEFONE] WHERE ID_CLIENTE = 732022
 
-- group by A.EC, CAST(CAST(C.NU_DDD AS VARCHAR)+CAST(C.NU_TELEFONE AS VARCHAR) AS BIGINT),C.TP_PREFERENCIAL, C.TP_ORIGEM
-- ORDER BY C.TP_PREFERENCIAL, C.TP_ORIGEM desc
)FORA ) X
 
group by X.EC, X.TELEFONE
 
 
---- )TUDOTEL
--select * from ##TUDOTEL 
--where ec = 732022
--order by 1, 3 asc
 
/*ORDENA OS TELEFONES*/
IF OBJECT_ID('tempdb..##RAW1') IS NOT NULL DROP TABLE ##RAW1
SELECT 
EC
,PRI
, CASE WHEN ROW_NUMBER()over(partition by EC order by EC,PRI)= 1 THEN TELEFONE END AS TEL1
, CASE WHEN ROW_NUMBER()over(partition by EC order by EC,PRI)= 2 THEN TELEFONE END AS TEL2
, CASE WHEN ROW_NUMBER()over(partition by EC order by EC,PRI)= 3 THEN TELEFONE END AS TEL3
, CASE WHEN ROW_NUMBER()over(partition by EC order by EC,PRI)= 4 THEN TELEFONE END AS TEL4
, CASE WHEN ROW_NUMBER()over(partition by EC order by EC,PRI)= 5 THEN TELEFONE END AS TEL5
, CASE WHEN ROW_NUMBER()over(partition by EC order by EC,PRI)= 6 THEN TELEFONE END AS TEL6
, CASE WHEN ROW_NUMBER()over(partition by EC order by EC,PRI)= 7 THEN TELEFONE END AS TEL7
, CASE WHEN ROW_NUMBER()over(partition by EC order by EC,PRI)= 8 THEN TELEFONE END AS TEL8
, CASE WHEN ROW_NUMBER()over(partition by EC order by EC,PRI)= 9 THEN TELEFONE END AS TEL9
, CASE WHEN ROW_NUMBER()over(partition by EC order by EC,PRI)= 10      THEN TELEFONE END AS TEL10
INTO ##RAW1
FROM ##TUDOTEL
ORDER BY PRI ASC
IF OBJECT_ID('tempdb..##RAW2') IS NOT NULL DROP TABLE ##RAW2
SELECT
--  A.PRI
	MAX(A.TEL1) AS TEL1
,MAX(A.TEL2) AS TEL2
,MAX(A.TEL3) AS TEL3
,MAX(A.TEL4) AS TEL4
,MAX(A.TEL5) AS TEL5
,MAX(A.TEL6) AS TEL6
,MAX(A.TEL7) AS TEL7
,MAX(A.TEL8) AS TEL8
,MAX(A.TEL9) AS TEL9
,MAX(A.TEL10) AS TEL10
,B.CEDENTE
,A.EC
,B.NOME
,B.CPF
,B.[DATA NASC]
,B.DEPOSITO
INTO ##RAW2
FROM ##RAW1 A
INNER JOIN ##CARGA_DIA B ON A.EC = B.EC
GROUP BY
-- A.PRI,
B.CEDENTE,
A.EC,
B.NOME,
B.CPF,
B.[DATA NASC],
B.DEPOSITO
-- ORDER BY A.PRI ASC
 
IF OBJECT_ID('tempdb..##RAWOUT') IS NOT NULL DROP TABLE ##RAWOUT
SELECT
CASE WHEN LEFT(TEL1,2) IS NULL THEN '' ELSE LEFT(TEL1,2) END AS DDD1,
CASE WHEN (CASE WHEN LEN(TEL1) = 11 THEN RIGHT(TEL1,9) ELSE RIGHT(TEL1,8) END) IS NULL THEN '' ELSE (CASE WHEN LEN(TEL1) = 11 THEN RIGHT(TEL1,9) ELSE RIGHT(TEL1,8) END) END AS TEL1,
CASE WHEN LEFT(TEL2,2) IS NULL THEN '' ELSE LEFT(TEL2,2) END AS DDD2,
CASE WHEN (CASE WHEN LEN(TEL2) = 11 THEN RIGHT(TEL2,9) ELSE RIGHT(TEL2,8) END) IS NULL THEN '' ELSE (CASE WHEN LEN(TEL2) = 11 THEN RIGHT(TEL2,9) ELSE RIGHT(TEL2,8) END) END AS TEL2,
CASE WHEN LEFT(TEL3,2) IS NULL THEN '' ELSE LEFT(TEL3,2) END AS DDD3,
CASE WHEN (CASE WHEN LEN(TEL3) = 11 THEN RIGHT(TEL3,9) ELSE RIGHT(TEL3,8) END) IS NULL THEN '' ELSE (CASE WHEN LEN(TEL3) = 11 THEN RIGHT(TEL3,9) ELSE RIGHT(TEL3,8) END) END AS TEL3,
CASE WHEN LEFT(TEL4,2) IS NULL THEN '' ELSE LEFT(TEL4,2) END AS DDD4,
CASE WHEN (CASE WHEN LEN(TEL4) = 11 THEN RIGHT(TEL4,9) ELSE RIGHT(TEL4,8) END) IS NULL THEN '' ELSE (CASE WHEN LEN(TEL4) = 11 THEN RIGHT(TEL4,9) ELSE RIGHT(TEL4,8) END) END AS TEL4,
CASE WHEN LEFT(TEL5,2) IS NULL THEN '' ELSE LEFT(TEL5,2) END AS DDD5,
CASE WHEN (CASE WHEN LEN(TEL5) = 11 THEN RIGHT(TEL5,9) ELSE RIGHT(TEL5,8) END) IS NULL THEN '' ELSE  (CASE WHEN LEN(TEL5) = 11 THEN RIGHT(TEL5,9) ELSE RIGHT(TEL5,8) END) END AS TEL5,
CASE WHEN LEFT(TEL6,2) IS NULL THEN '' ELSE LEFT(TEL6,2) END AS DDD6,
CASE WHEN (CASE WHEN LEN(TEL6) = 11 THEN RIGHT(TEL6,9) ELSE RIGHT(TEL6,8) END) IS NULL THEN '' ELSE (CASE WHEN LEN(TEL6) = 11 THEN RIGHT(TEL6,9) ELSE RIGHT(TEL6,8) END) END AS TEL6,
CASE WHEN LEFT(TEL7,2) IS NULL THEN '' ELSE LEFT(TEL7,2) END AS DDD7,
CASE WHEN (CASE WHEN LEN(TEL7) = 11 THEN RIGHT(TEL7,9) ELSE RIGHT(TEL7,8) END) IS NULL THEN '' ELSE (CASE WHEN LEN(TEL7) = 11 THEN RIGHT(TEL7,9) ELSE RIGHT(TEL7,8) END) END AS TEL7,
CASE WHEN LEFT(TEL8,2) IS NULL THEN '' ELSE LEFT(TEL8,2) END AS DDD8,
CASE WHEN (CASE WHEN LEN(TEL8) = 11 THEN RIGHT(TEL8,9) ELSE RIGHT(TEL8,8) END) IS NULL THEN '' ELSE (CASE WHEN LEN(TEL8) = 11 THEN RIGHT(TEL8,9) ELSE RIGHT(TEL8,8) END) END AS TEL8,
CASE WHEN LEFT(TEL9,2) IS NULL THEN '' ELSE LEFT(TEL9,2) END AS DDD9,
CASE WHEN  (CASE WHEN LEN(TEL9) = 11 THEN RIGHT(TEL9,9) ELSE RIGHT(TEL9,8) END) IS NULL THEN '' ELSE (CASE WHEN LEN(TEL9) = 11 THEN RIGHT(TEL9,9) ELSE RIGHT(TEL9,8) END) END AS TEL9,
CASE WHEN LEFT(TEL10,2) IS NULL THEN '' ELSE LEFT(TEL10,2) END AS DDD10,
CASE WHEN (CASE WHEN LEN(TEL10) = 11 THEN RIGHT(TEL10,9) ELSE RIGHT(TEL10,8) END) IS NULL THEN '' ELSE (CASE WHEN LEN(TEL10) = 11 THEN RIGHT(TEL10,9) ELSE RIGHT(TEL10,8) END) END AS TEL10,
CEDENTE,
EC,
NOME,
CPF,	
[DATA NASC]
INTO ##RAWOUT
FROM ##RAW2
--SELECT * FROM ##RAWOUT --where ec in (1525251, 734895)
 
DECLARE @BCPSQL_SMS VARCHAR(2000),
@BCPFILENAME_SMS VARCHAR(200)
SET @BCPFILENAME_SMS = '\\10.155.4.51\itf_in\AVON\ARQUIVOS_RAW\AVON_FASE1_M1_OLOS_ENVIO_TESTE2'+'_'+REPLACE((CONVERT(VARCHAR,CONVERT(DATE,(GETDATE())))),'-','')+'.txt'
SET @BCPSQL_SMS = 'SELECT * FROM ##RAWOUT'
SET @BCPSQL_SMS = 'BCP "' + @BCPSQL_SMS + '" QUERYOUT ' + @BCPFILENAME_SMS + ' -c -t; -r\n -CP850 -T -Slocalhost'
PRINT @BCPSQL_SMS 
 
DECLARE @RC_SMS VARCHAR(100)
EXEC @RC_SMS = MASTER..XP_CMDSHELL @BCPSQL_SMS
 
