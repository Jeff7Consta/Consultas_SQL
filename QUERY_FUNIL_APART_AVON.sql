
DECLARE @DATA DATE SET @DATA = CAST(DATEADD(MM, DATEDIFF(MM,0,GETDATE()-1), 0) AS DATE)

--##################################################### BASE CARTEIRA ####################################################################
IF OBJECT_ID ('tempdb..#AVON_ID_CLIENTE') IS NOT NULL DROP TABLE tempdb..#AVON_ID_CLIENTE
SELECT DISTINCT
	B.CPF,
	A.RA,
	B.ID_CLIENTE,
	B.CONTRATO,
	B.ENTRADA,
	B.SAIDA,
	B.DIAS_COB,
	B.UNIQ_CLI,
	B.SALDO,
	B.ATRASO,
	FASE.FASE
INTO #AVON_ID_CLIENTE
FROM [ADCOBMIS01].[DBO].AVON_RA A

LEFT JOIN (
SELECT DISTINCT
	SUBSTRING(B.CONTRATO,1,8) AS RA,
	B.CPF,
	B.ID_CLIENTE,
	B.CONTRATO,
	MIN(B.DATA_BASE) AS ENTRADA,
	MAX(B.DATA_BASE) AS SAIDA,
	DATEDIFF(DAY,MIN(B.DATA_BASE),MAX(B.DATA_BASE)) AS DIAS_COB,
	MAX(VL_SALDO) SALDO,
	CASE WHEN MAX(ATRASO) BETWEEN 0 AND 7     THEN '00 A 07'
		 WHEN MAX(ATRASO) BETWEEN 8 AND 30    THEN '08 A 30'
		 WHEN MAX(ATRASO) BETWEEN 31 AND 60   THEN '31 A 60'
		 WHEN MAX(ATRASO) BETWEEN 61 AND 90   THEN '61 A 90'
		 WHEN MAX(ATRASO) BETWEEN 91 AND 180  THEN '91 A 180'
		 WHEN MAX(ATRASO) BETWEEN 181 AND 360 THEN '181 A 360'
		 WHEN MAX(ATRASO) BETWEEN 361 AND 1080 THEN '361 A 1080'
		 WHEN MAX(ATRASO) <0 THEN 'MENOR 0'
		 ELSE 'MAIOR 1080'
	END AS ATRASO,
	ROW_NUMBER() OVER(PARTITION BY B.ID_CLIENTE ORDER BY MIN(B.DATA_BASE) DESC,B.ID_CLIENTE) AS UNIQ_CLI
FROM [ADCOBMIS01].[DBO].Carteira_Avon B WITH(NOLOCK)
	WHERE B.DATA_BASE >= @DATA
	--AND B.FASE_COB = 'FASE 1'
	--AND B.SETOR IN ('036','090','469','830')
GROUP BY SUBSTRING(B.CONTRATO,1,8),B.CPF,B.ID_CLIENTE,B.CONTRATO
) B ON A.RA = B.RA COLLATE SQL_Latin1_General_CP1_CI_AS

LEFT JOIN (
SELECT DISTINCT A.ID_CLIENTE, MIN(FASE_COB) as FASE FROM [ADCOBMIS01].[DBO].Carteira_Avon a
WHERE a.DATA_BASE >= @DATA
GROUP BY A.ID_CLIENTE
)FASE on FASE.id_cliente = B.ID_CLIENTE

ORDER BY B.UNIQ_CLI DESC

SELECT * FROM #AVON_ID_CLIENTE WHERE RA IS NOT NULL
--DROP TABLE [ADCOBMIS01].[DBO].AVON_RA
--DROP TABLE #AVON_ID_CLIENTE

--################################################# BASE DE ACIONAMENTOS #################################################################
IF OBJECT_ID ('tempdb..#AVON_ACIONAMENTOS') IS NOT NULL DROP TABLE tempdb..#AVON_ACIONAMENTOS
SELECT DISTINCT
	A.ID_CLIENTE,
	A.RA,
	MAX(B.TENTATIVA) AS TENTATIVA,
	MAX(B.ALO) AS ALO,
	MAX(B.CPC) AS CPC,
	MAX(B.ATD_ACORDO) AS ACORDO_TAB,
	MAX(CASE WHEN B.ACORDO_DIA = 'FEITO' THEN 1 ELSE 0 END) AS ACORDO,
	MAX(CASE WHEN C.ID_ACAO IN (19,27,28,33,36,43,44,48,167,171,175,184,188,189,228,248,249,250,251,252,254,261,262,265,266,274) THEN 1 ELSE 0 END) AS RECUSA
INTO #AVON_ACIONAMENTOS
FROM #AVON_ID_CLIENTE A
LEFT JOIN [ADCOBMIS01].[DBO].AVON_FUNIL_DT B ON A.ID_CLIENTE = B.ID_CLIENTE
LEFT JOIN [10.155.4.158].[EASYCOLLECTOR].[DBO].TB_CLIENTE_ACAO C ON B.ID_CLIENTE = C.ID_CLIENTE AND B.[DATA] = CONVERT(DATE,C.DT_ACAO)
	WHERE B.[DATA] >= CAST(DATEADD(MM, DATEDIFF(MM,0,GETDATE()-1), 0) AS DATE) --@DATA
GROUP BY A.ID_CLIENTE,A.RA
ORDER BY 1,2
OPTION(RECOMPILE)

SELECT * FROM #AVON_ACIONAMENTOS
	WHERE RA IS NOT NULL

--####################################################### BASE DE PAGAMENTOS ##############################################################
IF OBJECT_ID ('tempdb..#AVON_PAGAMENTOS') IS NOT NULL DROP TABLE tempdb..#AVON_PAGAMENTOS
SELECT DISTINCT
	A.ID_ACORDO,
	A.ID_CLIENTE,
	CONVERT(VARCHAR,D.NM_DIVIDA_CEDENTE) AS CONTRATO,
	SUBSTRING(D.NM_DIVIDA_CEDENTE,1,8) AS RA,
	CONVERT(DATE,A.DT_ACORDO) AS DT_ACORDO,
	SUM(CONVERT(MONEY,B.VL_PAGO)) AS VL_PAGO
INTO #AVON_PAGAMENTOS
FROM #AVON_ID_CLIENTE E
INNER JOIN [10.155.4.158].[EASYCOLLECTOR].[DBO].TB_ACORDO A WITH(NOLOCK) ON E.ID_CLIENTE = A.ID_CLIENTE
INNER JOIN [10.155.4.158].[EASYCOLLECTOR].[DBO].TB_FATURA B WITH(NOLOCK) ON A.ID_ACORDO = B.ID_ACORDO
INNER JOIN [10.155.4.158].[EASYCOLLECTOR].[DBO].TB_CLIENTE C WITH(NOLOCK) ON A.ID_CLIENTE = C.ID_CLIENTE
INNER JOIN [10.155.4.158].[EASYCOLLECTOR].[DBO].TB_ACORDO_DIVIDA D WITH(NOLOCK) ON A.ID_ACORDO = D.ID_ACORDO
	WHERE CONVERT(DATE, B.DT_PAGAMENTO) >= CAST(DATEADD(MM, DATEDIFF(MM,0,GETDATE()-1), 0) AS DATE) --@DATA
	AND A.ID_USUARIO_CANCELAMENTO IS NULL
	--AND A.ID_USUARIO IS NOT NULL
	AND C.ID_CEDENTE = 1
GROUP BY A.ID_ACORDO,A.ID_CLIENTE,CONVERT(VARCHAR,D.NM_DIVIDA_CEDENTE),SUBSTRING(D.NM_DIVIDA_CEDENTE,1,8),CONVERT(DATE,A.DT_ACORDO)
OPTION(RECOMPILE)

SELECT * FROM #AVON_PAGAMENTOS
	WHERE RA IS NOT NULL

--####################################################### BASE DE RAS ##############################################################

SELECT DISTINCT * FROM [ADCOBMIS01].[DBO].AVON_RA
OPTION(RECOMPILE)

--####################################################### TEM TELEFONE ##############################################################
/*SELECT DISTINCT ID_CLIENTE FROM AVON_TELEFONES
WHERE DATA_BASE >= CAST(DATEADD(MM, DATEDIFF(MM,0,GETDATE()), 0) AS DATE)
AND ID_CLIENTE IN ()
OPTION(RECOMPILE)
*/
--################################################# EXTRAS #################################################################

/*

SELECT COUNT(ID_CLIENTE) AS 'CPF – Total (qnt. CPF’s na base)',
COUNT(DISTINCT (CASE WHEN ATIVO = '1' THEN ID_CLIENTE ELSE '' END) ) AS 'CPF – Ativo (qnt. CPF’s que contas na carteira como ativo) ',
SUM(NOVO) AS 'CPF - Telefone Novo (qnt. de telefones novos importados)',
SUM(CASE WHEN CEL = 'CEL' AND NOVO = 1  THEN 1 ELSE 0 END) AS 'Móvel – Novo',
SUM(CASE WHEN CEL = 'FIXO' AND NOVO = 1 THEN 1 ELSE 0 END) AS 'Fixo – Novo',
COUNT( NU_TELEFONE) AS 'Telefone Existente '
FROM(
		SELECT A.*,
		B.NU_DDD,
		B.NU_TELEFONE,
		B.DT_INCLUSAO,
		CASE WHEN a.ID_CLIENTE IS NULL THEN 0 ELSE 1 END AS ATIVO ,
		CASE WHEN DT_INCLUSAO > @DATA THEN 1 ELSE 0 END AS NOVO,
		CASE WHEN LEN(NU_TELEFONE) = 9 THEN 'CEL' ELSE 'FIXO' END AS CEL
		FROM #AVON_ID_CLIENTE A
		LEFT JOIN (SELECT ID_CLIENTE,NU_DDD,NU_TELEFONE,CAST(DT_INCLUSAO AS DATE) DT_INCLUSAO FROM [10.155.4.158].[EASYCOLLECTOR].[DBO].TB_CLIENTE_TELEFONE WITH(NOLOCK)) B
		ON B.ID_CLIENTE = A.ID_CLIENTE
		WHERE RA IS NOT NULL
)BASE
*/

/*
--################################################# BASE EXTRA DE FUNIL #################################################################
--PROTOTIPAÇÃO MODELO FUNIL DELES
IF OBJECT_ID ('tempdb..#AVON_ACIONAMENTOS_EXTRA') IS NOT NULL DROP TABLE tempdb..#AVON_ACIONAMENTOS_EXTRA

SELECT DISTINCT
	A.ID_CLIENTE
	,A.RA
	,SUM(TENTATIVA_ESF)	TENTATIVA_ESF	
	,SUM(ALO_ESF)		ALO_ESF	
	,SUM(CPC_ESF)		CPC_ESF	
	,SUM(RECUSA_ESF)	RECUSA_ESF	
	,SUM(ALEGA_ESF)		ALEGA_ESF	
	,MAX(TENTATIVA)		TENTATIVA	
	,MAX(ALO)			ALO	
	,MAX(CPC)			CPC	
	,MAX(ATD_ACORDO)	ATD_ACORDO	
	,MAX(RECUSA)		RECUSA	
	,MAX(ALEGA_PGTO)	ALEGA_PGTO
INTO #AVON_ACIONAMENTOS_EXTRA
FROM #AVON_ID_CLIENTE A
LEFT JOIN [ADCOBMIS01].[DBO].AVON_FUNIL_DT B ON A.ID_CLIENTE = B.ID_CLIENTE
	WHERE B.[DATA] >= @DATA
GROUP BY A.ID_CLIENTE, A.RA
ORDER BY 1,2
OPTION(RECOMPILE)

SELECT * FROM #AVON_ACIONAMENTOS_EXTRA
	WHERE RA IS NOT NULL
*/